

buildscript {

    ext {
        springBootVersion = "1.5.9.RELEASE"
    }

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath "org.owasp:dependency-check-gradle:3.1.0"
    }

}

apply plugin: 'java'
apply plugin: "idea"
apply plugin: "org.springframework.boot"
apply plugin: "jacoco"
apply plugin: "org.owasp.dependencycheck"

ext {
    springBootVersion = "1.5.9.RELEASE"
    jacksonVersion = "2.9.3"
    feignVersion = "9.5.1"
    springfoxVersion = "2.8.0"
    tomcatVersion = "8.5.24"
}

group 'org.bstick12'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven { url "http://repo.spring.io/milestone" }
}

jar {
    exclude "application.yml"
}

dependencies {

    compile("org.apache.tomcat:tomcat:$tomcatVersion")
    compile("org.apache.tomcat:tomcat-annotations-api:$tomcatVersion")

    compile("org.springframework.boot:spring-boot-starter:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-actuator:$springBootVersion")

    compile("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
    compile("com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion")
    compile("com.fasterxml.jackson.core:jackson-core:$jacksonVersion")

    compile("io.github.openfeign:feign-core:$feignVersion")
    compile("io.github.openfeign:feign-jackson:$feignVersion")
    compile("io.github.openfeign:feign-okhttp:$feignVersion")

    compile("io.springfox:springfox-swagger2:$springfoxVersion")
    compile("io.springfox:springfox-swagger-ui:$springfoxVersion")

    compile("com.google.guava:guava:23.6-jre")

    testCompile("org.springframework.boot:spring-boot-starter-test")

//    testCompile("com.github.tomakehurst:wiremock:2.14.0")
    testCompile("org.mockito:mockito-core:2.13.0")
    testCompile("org.assertj:assertj-core:3.9.0")

}

jacoco {
    toolVersion = "0.7.9"
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

bootRun { systemProperties = System.properties }

test {

    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }

    testLogging {
        events "passed", "failed", "skipped"
        exceptionFormat "full"
    }

}
